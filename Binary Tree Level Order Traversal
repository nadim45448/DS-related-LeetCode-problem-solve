/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int depth(TreeNode* root)
{
    if(root==NULL)return 0;
    int a=depth(root->left);
    int b=depth(root->right);
    return max(a,b)+1;

}
    vector<vector<int>> levelOrder(TreeNode* root) {
        int n=depth(root);
        vector<vector<int>>ans(n);
        if(root==NULL)return ans;
        queue<pair<TreeNode*, int>>q;
        q.push({root,0});
        while(!q.empty())
        {
            pair<TreeNode*, int>parent=q.front();
            q.pop();
            ans[parent.second].push_back(parent.first->val);
           if(parent.first->left)
            {
                q.push({parent.first->left,parent.second+1});
            }
            if(parent.first->right)
            {
                q.push({parent.first->right,parent.second+1});
            }
        }
     return ans;
    }
    
};
